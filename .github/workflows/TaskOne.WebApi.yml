name: TaskOne.WebApi-CI-CD

env:
  AZURE_WEBAPP_SLOT_NAME: Staging
  AZURE_RG_NAME: rg-kpmg-test
  AZURE_WEBAPP_PACKAGE_PATH: './KPMG.Interview/KPMG.Interview.TaskOne.WebApi/KPMG.Interview.TaskOne.WebApi.csproj'  
  DOTNET_VERSION: '6.0.x'
  ARM_TEMPLATES_PATH: './.github/templates'

on: 
  push:
    paths:
      - 'KPMG.Interview/KPMG.Interview.TaskOne.WebApi/**'
      - 'KPMG.Interview/KPMG.Interview.TaskOne.DbRepository/**'
  pull_request:
    types: [opened, reopened]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - name: Bump version and push tag
        if: github.ref == 'refs/heads/main'
        id: tag_version
        uses: mathieudutour/github-tag-action@v6.0
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}

      - name: Create a GitHub release
        if: github.ref == 'refs/heads/main'
        uses: ncipollo/release-action@v1
        with:
          tag: ${{ steps.tag_version.outputs.new_tag }}
          name: Release ${{ steps.tag_version.outputs.new_tag }}
          body: ${{ steps.tag_version.outputs.changelog }}

      - name: Set up .NET Core
        uses: actions/setup-dotnet@v2
        with:
          dotnet-version: ${{ env.DOTNET_VERSION }}
      
      - name: Set up dependency caching for faster builds
        uses: actions/cache@v3
        with:
          path: ~/.nuget/packages
          key: ${{ runner.os }}-nuget-${{ hashFiles('**/packages.lock.json') }}
          restore-keys: |
            ${{ runner.os }}-nuget-

      - name: Build with dotnet
        run: dotnet build ${{env.AZURE_WEBAPP_PACKAGE_PATH}} --configuration Release

      - name: dotnet publish
        run: dotnet publish ${{env.AZURE_WEBAPP_PACKAGE_PATH}} -c Release -o ${{env.DOTNET_ROOT}}/myapp

      - name: Copy arm templates to artifact folder
        run: cp -R ${{env.ARM_TEMPLATES_PATH}} ${{env.DOTNET_ROOT}}/myapp/

      - name: Upload artifact for deployment  job
        uses: actions/upload-artifact@v3
        with:
          name: .net-app
          path: ${{env.DOTNET_ROOT}}/myapp

  Dev:
    runs-on: ubuntu-latest
    needs: build
    environment:
      name: 'Dev'
      url: https://${{ steps.arm-deployment.outputs.webAppName }}.azurewebsites.net

    steps:
      - name: Download artifact from build job
        uses: actions/download-artifact@v3
        with:
          name: .net-app

      - name: Display structure of downloaded files
        run: ls -R

      - name: Azure Login 
        uses: azure/login@v1
        with:
          creds: ${{secrets.AZURE_CREDENTIALS}}

      - name: Run API ARM deployment
        id: arm-deployment
        uses: azure/arm-deploy@v1
        with:
          subscriptionId: ${{ secrets.AZURE_SUBSCRIPTION }}
          resourceGroupName: ${{ secrets.AZURE_RG }}
          template: ./templates/appservice.json
          parameters: ./templates/taskoneapi.dev.parameters.json

      - uses: microsoft/variable-substitution@v1 
        with:
          files: './templates/sql.parameters.json'
        env:
          'parameters:administratorLoginPassword': ${{ secrets.SQL_PASS }}
          'parameters:administratorLogin': ${{ secrets.SQL_USERID }}

      - name: Run SQL ARM deployment
        id: sql-arm-deployment
        uses: azure/arm-deploy@v1
        with:
          subscriptionId: ${{ secrets.AZURE_SUBSCRIPTION }}
          resourceGroupName: ${{ secrets.AZURE_RG }}
          template: ./templates/sqlserver.json
          parameters: ./templates/sql.parameters.json

      - name: Deploy to Staging Slot
        id: deploy-to-webapp-slot
        uses: azure/webapps-deploy@v2
        with:
          app-name: ${{ steps.arm-deployment.outputs.webAppName }}
          slot-name: ${{ env.AZURE_WEBAPP_SLOT_NAME }}

      - name: Swap slot
        run: az webapp deployment slot swap -g $AZURE_RG_NAME -n ${{ steps.arm-deployment.outputs.webAppName }} --slot Staging --target-slot production
      
      - name: Azure Logout
        run: az logout

  Test:
    runs-on: ubuntu-latest
    needs: Dev
    environment:
      name: 'Test'
      url: https://${{ steps.arm-deployment.outputs.webAppName }}.azurewebsites.net

    steps:
      - name: Download artifact from build job
        uses: actions/download-artifact@v3
        with:
          name: .net-app
      - name: Display structure of downloaded files
        run: ls -R

      - name: Azure Login 
        uses: azure/login@v1
        with:
          creds: ${{secrets.AZURE_CREDENTIALS}}

      - name: Run ARM deployment
        id: arm-deployment
        uses: azure/arm-deploy@v1
        with:
          subscriptionId: ${{ secrets.AZURE_SUBSCRIPTION }}
          resourceGroupName: ${{ secrets.AZURE_RG }}
          template: ./templates/appservice.json
          parameters: ./templates/taskoneapi.test.parameters.json
      
      - name: Deploy to Staging Slot
        id: deploy-to-webapp-slot
        uses: azure/webapps-deploy@v2
        with:
          app-name: ${{ steps.arm-deployment.outputs.webAppName }}
          slot-name: ${{ env.AZURE_WEBAPP_SLOT_NAME }}

      - name: Swap slot
        run: az webapp deployment slot swap -g $AZURE_RG_NAME -n ${{ steps.arm-deployment.outputs.webAppName }} --slot Staging --target-slot production
      
      - name: Azure Logout
        run: az logout

  Uat:
    if: github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    needs: Test
    environment:
      name: 'Staging'
      url: https://${{ steps.arm-deployment.outputs.webAppName }}.azurewebsites.net

    steps:
      - name: Download artifact from build job
        uses: actions/download-artifact@v3
        with:
          name: .net-app

      - name: Azure Login 
        uses: azure/login@v1
        with:
          creds: ${{secrets.AZURE_CREDENTIALS}}

      - name: Run ARM deployment
        id: arm-deployment
        uses: azure/arm-deploy@v1
        with:
          subscriptionId: ${{ secrets.AZURE_SUBSCRIPTION }}
          resourceGroupName: ${{ secrets.AZURE_RG }}
          template: ./templates/appservice.json
          parameters: ./templates/taskoneapi.uat.parameters.json
      
      - name: Deploy to Staging Slot
        id: deploy-to-webapp-slot
        uses: azure/webapps-deploy@v2
        with:
          app-name: ${{ steps.arm-deployment.outputs.webAppName }}
          slot-name: ${{ env.AZURE_WEBAPP_SLOT_NAME }}

      - name: Swap slot
        run: az webapp deployment slot swap -g $AZURE_RG_NAME -n ${{ steps.arm-deployment.outputs.webAppName }} --slot Staging --target-slot production
      
      - name: Azure Logout
        run: az logout

  Prod:
    if: github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    needs: Uat
    environment:
      name: 'Prod'
      url: https://${{ steps.arm-deployment.outputs.webAppName }}.azurewebsites.net

    steps:
      - name: Download artifact from build job
        uses: actions/download-artifact@v3
        with:
          name: .net-app

      - name: Azure Login 
        uses: azure/login@v1
        with:
          creds: ${{secrets.AZURE_CREDENTIALS}}

      - name: Run ARM deployment
        id: arm-deployment
        uses: azure/arm-deploy@v1
        with:
          subscriptionId: ${{ secrets.AZURE_SUBSCRIPTION }}
          resourceGroupName: ${{ secrets.AZURE_RG }}
          template: ./templates/appservice.json
          parameters: ./templates/taskoneapi.prod.parameters.json
      
      - name: Deploy to Staging Slot
        id: deploy-to-webapp-slot
        uses: azure/webapps-deploy@v2
        with:
          app-name: ${{ steps.arm-deployment.outputs.webAppName }}
          slot-name: ${{ env.AZURE_WEBAPP_SLOT_NAME }}

      - name: Swap slot
        run: az webapp deployment slot swap -g $AZURE_RG_NAME -n ${{ steps.arm-deployment.outputs.webAppName }} --slot Staging --target-slot production
      
      - name: Azure Logout
        run: az logout
